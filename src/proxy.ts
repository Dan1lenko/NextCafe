import { withAuth } from "next-auth/middleware";
import { NextResponse } from "next/server";

// –õ–æ–≥ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —â–æ —Ñ–∞–π–ª –≤—Å–µ —â–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è
console.log("‚úÖ [Proxy/Auth] –§–∞–π–ª 'proxy.ts' –∑ NextAuth –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!");

export default withAuth(
  // –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è, –¢–Ü–õ–¨–ö–ò –Ø–ö–©–û `authorized` –ø–æ–≤–µ—Ä–Ω—É–ª–æ `true`
  function middleware(req) {
    console.log(
      "‚úÖ [Proxy/Auth] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π. –ó–∞–ø–∏—Ç –Ω–∞:",
      req.nextUrl.pathname
    );
    return NextResponse.next();
  },
  {
    callbacks: {
      // –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ó–ê–í–ñ–î–ò –¥–ª—è –º–∞—Ä—à—Ä—É—Ç—ñ–≤ —É `matcher`
      authorized: ({ token, req }) => {
        console.log("---------------------------------");
        console.log(
          "üö© [Proxy/Auth] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ 'authorized' –¥–ª—è:",
          req.nextUrl.pathname
        );
        console.log(
          "   –¢–æ–∫–µ–Ω (—Å–µ—Å—ñ—è):",
          token ? "–Ñ —Ç–æ–∫–µ–Ω" : "null (–Ω–µ–º–∞—î —Ç–æ–∫–µ–Ω—É)"
        );

        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ `true` —è–∫—â–æ —Ç–æ–∫–µ–Ω —î, —ñ `false` - —è–∫—â–æ –Ω–µ–º–∞—î
        return !!token;
      },
    },
    pages: {
      // –°—Ç–æ—Ä—ñ–Ω–∫–∞, –∫—É–¥–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—Ç–∏, —è–∫—â–æ `authorized` –ø–æ–≤–µ—Ä–Ω–µ `false`
      signIn: "/login",
    },
  }
);

// –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è
export const config = {
  matcher: ["/order", "/profile"],
};
